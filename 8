from telethon.tl.types import Message
from .. import loader, utils
from random import randint
import asyncio


@loader.tds
class ModuleAnimatedQuotes(loader.Module):
    strings_ru = {
        "name": "–ú–æ–¥—É–ª—å [AnimatedQuotes]",
        "no_text": "üö´ <b>–£–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞</b>",
        "processing": "‚åõÔ∏è <b>–î—É–º–∞—é...</b>",
        "erroeaq": "<b>–û—à–∏–±–∫–∞</b>",
        "_cmd_doc_aniq": "<index> <text> - –°–æ–∑–¥–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∏–∫–µ—Ä",
        "_cls_doc": "–ú–æ–¥—É–ª—å, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã",
    }

    strings_en = {
        "name": "Module [AnimatedQuotes]",
        "no_text": "üö´ <b>Specify the text for creating a sticker</b>",
        "processing": "‚åõÔ∏è <b>Think...</b>",
        "erroeaq": "<b>Error</b>",
        "_cmd_doc_aniq": "<index> <text> - Create a random animated sticker",
        "_cls_doc": "A module that creates animated stickers",
    }

    async def generatefoto(self, message: Message, image_index: int, args: str):
        if not args:
            await utils.answer(message, self.strings["no_text"])
            return

        processing_message = await utils.answer(message, self.strings["processing"])

        try:
            query = await self._client.inline_query("@QuotAfBot", args)
            if query and len(query) >= image_index + 1:
                await processing_message.respond(file=query[image_index].document)
            else:
                await utils.answer(message, self.strings["erroeaq"])
        except Exception:
            await utils.answer(message, self.strings["erroeaq"])

        if message.out:
            await message.delete()

    async def get_image_index_and_text(self, args: str) -> (int, str):
        image_index = randint(0, 4)
        text = args.strip()

        if args.startswith(("1 ", "2 ", "3 ", "4 ", "5 ")):
            image_index = int(args[0]) - 1
            text = args[2:].strip()
        elif args.isdigit():
            image_index = int(args)

        return image_index, text

    async def aniqcmd(self, message: Message):
        args = utils.get_args_raw(message).strip()

        image_index, text = await self.get_image_index_and_text(args)
        await self.generatefoto(message, image_index, text)
