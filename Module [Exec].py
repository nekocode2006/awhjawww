# meta developer: @Mmazzerratti

from telethon.tl.types import Message
from .. import loader, utils
from io import StringIO
import traceback
import sys

@loader.tds
class AnimatedQuotesMod(loader.Module):
    strings = {
        "name": "Module [Exec]",
        "exec": (
            "Exec"
        ),
    }

    strings_ru = {
        "no_text": (
            "<emoji document_id=5312526098750252863>üö´</emoji> <b>–£–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç –¥–ª—è"
            " —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞</b>"
        ),
        "processing": (
            "<emoji document_id=5451646226975955576>‚åõÔ∏è</emoji> <b>–û–±—Ä–∞–±–æ—Ç–∫–∞...</b>"
        ),
        "_cmd_doc_exec": "<code> - –í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É",
        "_cls_doc": "–ü—Ä–æ—Å—Ç–µ–Ω—å–∫–∏–π –º–æ–¥—É–ª—å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã",
    }


    async def execcmd(self, message: Message):
        code = utils.get_args_raw(message)
        if code:
            try:
                output = sys.stdout = StringIO()
                exec(code)
                val = output.getvalue()
                if val.strip():
                    await utils.answer(message, f"üë• –ö–æ–º–∞–Ω–¥–∞:\n{code}\n\nüì§ –í—ã–≤–æ–¥:\n{output.getvalue()}")
            except:
                await utils.answer(message, traceback.format_exc())
